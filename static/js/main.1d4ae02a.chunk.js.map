{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","hooks/hooks/use-http.js","lib/lib/api.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","CommentItem","CommentsList","comments","comment","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","Comments","isAddingComment","setIsAddingComment","params","useParams","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDetail","match","useRouteMatch","path","exact","url","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d4ae02a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3mud6\",\"loading\":\"QuoteForm_loading__AMrEV\",\"control\":\"QuoteForm_control__38p0m\",\"actions\":\"QuoteForm_actions__36pdI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__31_YV\",\"logo\":\"MainNavigation_logo__3Oods\",\"nav\":\"MainNavigation_nav__M_y4R\",\"active\":\"MainNavigation_active__2FZ6X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1mV6q\",\"loading\":\"NewCommentForm_loading__31gHY\",\"control\":\"NewCommentForm_control__OHGvX\",\"actions\":\"NewCommentForm_actions__3cHc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1g6zW\",\"sorting\":\"QuoteList_sorting__36UIb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__MQsa_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1Rwuk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__ETYBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2HKtM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1BUD9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__lWQLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3MiCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1c3DI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__y25qu\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={\"/quotes/\" + props.id} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const sortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `sort=${isSortingAscending ? \"dec\" : \"asc\"}`,\n    });\n\n    // history.push(\"/quotes?sort=\" + (isSortingAscending ? \"dec\" : \"asc\"));\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n  \"https://react-max-fa58c-default-rtdb.europe-west1.firebasedatabase.app\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useEffect } from \"react\";\n\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../hooks/hooks/use-http\";\nimport { getAllQuotes } from \"../lib/lib/api\";\n\n// const DUMMY_DATA = [\n//   { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\n//   { id: \"q2\", author: \"Maria\", text: \"Practise makes perfect\" },\n//   { id: \"q3\", author: \"Joey\", text: \"WOW WOW WOW\" },\n// ];\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    data: loadedQuotes,\n    status,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if ((status === \"completed\" && !loadedQuotes) || loadedQuotes.length === 0) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finalSubmissionHandler = () => {\n    setIsEntering(false);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={() =>\n          \"Do you really want to leave that page? All entered data will be lost\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finalSubmissionHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/hooks/use-http\";\nimport { addQuote } from \"../lib/lib/api\";\n\nconst NewQuote = () => {\n  const history = useHistory();\n  const { sendRequest, status } = useHttp(addQuote);\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n\n  return (\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\n  );\n};\n\nexport default NewQuote;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/hooks/use-http\";\nimport { addComment } from \"../../lib/lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment, quoteId } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n    const data = commentTextRef.current.value;\n\n    sendRequest({ commentData: { text: data }, quoteId: quoteId });\n    commentTextRef.current.value = \"\";\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/hooks/use-http\";\nimport { getAllComments } from \"../../lib/lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    data: loadedComments,\n    status,\n    error,\n  } = useHttp(getAllComments, true);\n\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && (loadedComments || loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments has been aded yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          onAddedComment={addedCommentHandler}\n          quoteId={params.quoteId}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from \"react\";\nimport { Route, Link, useParams, useRouteMatch } from \"react-router-dom\";\n\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/hooks/use-http\";\nimport { getSingleQuote } from \"../lib/lib/api\";\n\n// const DUMMY_DATA = [\n//   { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\n//   { id: \"q2\", author: \"Maria\", text: \"Practise makes perfect\" },\n//   { id: \"q3\", author: \"Joey\", text: \"WOW WOW WOW\" },\n// ];\n\nconst QuoteDetail = () => {\n  const params = useParams();\n  const match = useRouteMatch();\n\n  const {\n    sendRequest,\n    data: quote,\n    status,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (!quote.text) {\n    return <p className=\"centered\">No quote found!</p>;\n  }\n\n  return (\n    <section>\n      <HighlightedQuote author={quote.author} text={quote.text} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </section>\n  );\n};\n\nexport default QuoteDetail;\n","import { NavLink } from \"react-router-dom\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from \"react\";\n\nimport MainNavigation from \"./MainNavigation\";\n\nimport classes from \"./Layout.module.css\";\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","const NotFound = () => {\n  return (\n    <div className=\"centered\">\n      <p>Page not found!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}